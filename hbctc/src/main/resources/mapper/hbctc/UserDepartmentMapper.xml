<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.renren.modules.hbctc.dao.UserDepartmentMapper">
  <resultMap id="BaseResultMap" type="io.renren.modules.hbctc.entity.UserDepartment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="deptno" jdbcType="VARCHAR" property="deptno" />
    <result column="detpname" jdbcType="VARCHAR" property="detpname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userid, deptno, detpname
  </sql>
  <select id="selectByExample" parameterType="io.renren.modules.hbctc.entity.UserDepartmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hbctc_user_dept
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hbctc_user_dept
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectMapResutl" resultType="java.util.HashMap">
	  SELECT
		base.*
		FROM
			(
				SELECT
					dp.userid AS deptno,
					dp.deptno AS preid,
					u.username AS name,
					dp.userid AS userid
				FROM
					hbctc_user_dept dp
				JOIN hbctc_dept d ON d.deptno = dp.deptno
				JOIN sys_user u ON dp.userid = u.user_id
				UNION ALL
					SELECT
						dp.deptno AS deptno,
						"0" AS preid,
						dp.detpname AS name,
						dp.userid AS userid
					FROM
						hbctc_user_dept dp
					JOIN hbctc_dept d ON d.deptno = dp.deptno
					GROUP BY dp.deptno
			) base
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hbctc_user_dept
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="io.renren.modules.hbctc.entity.UserDepartmentExample">
    delete from hbctc_user_dept
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.renren.modules.hbctc.entity.UserDepartment">
    insert into hbctc_user_dept (id, userid, deptno, 
      detpname)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{deptno,jdbcType=VARCHAR}, 
      #{detpname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.renren.modules.hbctc.entity.UserDepartment">
    insert into hbctc_user_dept
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="deptno != null">
        deptno,
      </if>
      <if test="detpname != null">
        detpname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="deptno != null">
        #{deptno,jdbcType=VARCHAR},
      </if>
      <if test="detpname != null">
        #{detpname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.renren.modules.hbctc.entity.UserDepartmentExample" resultType="java.lang.Long">
    select count(*) from hbctc_user_dept
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hbctc_user_dept
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.deptno != null">
        deptno = #{record.deptno,jdbcType=VARCHAR},
      </if>
      <if test="record.detpname != null">
        detpname = #{record.detpname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hbctc_user_dept
    set id = #{record.id,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      deptno = #{record.deptno,jdbcType=VARCHAR},
      detpname = #{record.detpname,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.renren.modules.hbctc.entity.UserDepartment">
    update hbctc_user_dept
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="deptno != null">
        deptno = #{deptno,jdbcType=VARCHAR},
      </if>
      <if test="detpname != null">
        detpname = #{detpname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.renren.modules.hbctc.entity.UserDepartment">
    update hbctc_user_dept
    set userid = #{userid,jdbcType=INTEGER},
      deptno = #{deptno,jdbcType=VARCHAR},
      detpname = #{detpname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>